name: bygg-frontend

on:
  push:
    branches: [ main, dev ]
  workflow_dispatch:

concurrency:
  group: bygg-${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Sjekk ut kode
        uses: actions/checkout@v4

      - name: Sett opp Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Installer avhengigheter (legacy peer deps)
        env:
          npm_config_legacy_peer_deps: true
        run: npm ci --no-audit --no-fund

      - name: Bygg (prod-optimaliseringer)
        env:
          # Velg API-base ut fra branch
          VITE_API_BASE_URL: ${{ github.ref_name == 'main' && vars.PROD_VITE_API_BASE_URL || vars.STAGING_VITE_API_BASE_URL }}
        run: npm run build -- --mode production

      - name: Verifiser at API-URL er bakt inn
        env:
          API_URL: ${{ github.ref_name == 'main' && vars.PROD_VITE_API_BASE_URL || vars.STAGING_VITE_API_BASE_URL }}
        run: grep -R "${API_URL}" dist -n

      - name: Last opp artefakt
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
          retention-days: 5

  deploy-dev:
    if: github.ref_name == 'dev'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Last ned bygget
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Start ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Legg til known_hosts
        run: ssh-keyscan -H "${{ vars.STAGING_HOST }}" >> ~/.ssh/known_hosts

      - name: Opprett målmappe (om mangler)
        run: ssh "${{ vars.STAGING_USER }}@${{ vars.STAGING_HOST }}" 'mkdir -p "${{ vars.STAGING_PATH }}"'

      - name: Rsync til dev-nettside
        run: |
          rsync -az --delete --no-perms --no-group --omit-dir-times \
            -e "ssh -o StrictHostKeyChecking=yes" \
            dist/ "${{ vars.STAGING_USER }}@${{ vars.STAGING_HOST }}:${{ vars.STAGING_PATH }}/"

      - name: Reload Apache (valgfritt)
        run: ssh "${{ vars.STAGING_USER }}@${{ vars.STAGING_HOST }}" 'sudo systemctl reload apache2 || true'

      - name: Røyk-test
        run: curl -fsS "https://${{ vars.STAGING_DOMAIN }}/" >/dev/null

  deploy-prod:
    if: github.ref_name == 'main'
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Last ned bygget
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist

      - name: Start ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Legg til known_hosts
        run: ssh-keyscan -H "${{ vars.DEPLOY_HOST }}" >> ~/.ssh/known_hosts

      - name: Opprett målmappe (om mangler)
        run: ssh "${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_HOST }}" 'mkdir -p "${{ vars.DEPLOY_PATH }}"'

      - name: Rsync til produksjon
        run: |
          rsync -az --delete --no-perms --no-group --omit-dir-times \
            -e "ssh -o StrictHostKeyChecking=yes" \
            dist/ "${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_HOST }}:${{ vars.DEPLOY_PATH }}/"

      - name: Reload Apache (valgfritt)
        run: ssh "${{ vars.DEPLOY_USER }}@${{ vars.DEPLOY_HOST }}" 'sudo systemctl reload apache2 || true'

      - name: Røyk-test
        run: curl -fsS "https://${{ vars.PROD_DOMAIN }}/" >/dev/null